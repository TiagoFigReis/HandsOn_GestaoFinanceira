trigger:
  branches:
    include:
      - main
  paths:
    include:
      - HandsOn-Back/*
      - pipelines/backend/*

pool:
  name: ExpensesReportPool

variables:
  imageName: "hands-on-backend"
  dockerRegistry: "xitcloudinfracontainerregistry"
  dockerRepository: "hands-on-backend"
  dockerTag: "$(Build.BuildId)"
  dockerRegistryServiceConnection: "6c1a086d-4b6d-4f67-a4ce-0556b5df49f8"
  baseDirectory: "HandsOn-Back"
  group: HandsOnSecrets

steps:
  - task: PowerShell@2
    inputs:
      targetType: "inline"
      script: |
        $appSettingsPath = "$(Build.SourcesDirectory)/$(baseDirectory)/src/API/appsettings.json"

        $defaultConnection = "$(DefaultConnection)"
        $jwtKey = "$(JwtKey)"
        $issuer = "$(Issuer)"
        $audience = "$(Audience)"
        $googleClientId = "$(GoogleClientId)"
        $googleClientSecret = "$(GoogleClientSecret)"
        $googleRedirectUri = "$(GoogleRedirectUri)"
        $hashKey = "$(HashKey)"

        # Replace placeholders with actual values from pipeline variables
        Write-Host "Replacing sensitive data in appsettings.json"
        (Get-Content $appSettingsPath) | 
          ForEach-Object { $_ -replace '<<DefaultConnection>>', $defaultConnection } |
          ForEach-Object { $_ -replace '<<JwtKey>>', $jwtKey } |
          ForEach-Object { $_ -replace '<<Issuer>>', $issuer } |
          ForEach-Object { $_ -replace '<<Audience>>', $audience } |
          ForEach-Object { $_ -replace '<<GoogleClientId>>', $googleClientId } |
          ForEach-Object { $_ -replace '<<GoogleClientSecret>>', $googleClientSecret } |
          ForEach-Object { $_ -replace '<<GoogleRedirectUri>>', $googleRedirectUri } |
          ForEach-Object { $_ -replace '<<HashKey>>', $hashKey } |
          Set-Content $appSettingsPath
      pwsh: true
      displayName: "Replace sensitive data in appsettings.json before restore"

  - task: UseDotNet@2
    inputs:
      packageType: "sdk"
      version: "6.x"
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: Docker@2
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(dockerRepository)
      command: "buildAndPush"
      Dockerfile: "$(baseDirectory)/Dockerfile"
      tags: $(dockerTag)
      buildContext: $(Build.SourcesDirectory)
      displayName: "Building and pushing the image to ACR"

  - task: PowerShell@2
    inputs:
      targetType: "inline"
      script: |
        # az acr login --name xitcloudinfracontainerregistry.azurecr.io  

        # Ensure Docker is running on the Windows Server
        # docker pull $(dockerRegistry)/$(dockerRepository):$(Build.BuildId)

        # Stop and remove the existing container (if any)

        docker ps -q -f "name=hands-on-backend" | ForEach-Object { docker stop $_ } ; $true
        docker ps -a -q -f "name=hands-on-backend" | ForEach-Object { docker rm $_ } ; $true

        # docker stop hands-on-backend
        # docker rm hands-on-backend

        # Run the new container with the latest image
        docker run -d --restart=always --name hands-on-backend -p 6001:8080 $(dockerRegistry).azurecr.io/$(dockerRepository):$(Build.BuildId)
      pwsh: true
      displayName: "Deploy to Self-hosted Windows Server"
